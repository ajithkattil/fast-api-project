"""initial

Revision ID: 34d124c7aefd
Revises: 
Create Date: 2025-05-22 09:59:39.260258

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '34d124c7aefd'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('partners',
    sa.Column('partner_id', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('recipe_create_cutoff_days', sa.Integer(), nullable=False),
    sa.Column('recipe_update_cutoff_days', sa.Integer(), nullable=True),
    sa.Column('recipe_delete_cutoff_days', sa.Integer(), nullable=True),
    sa.Column('max_assemblies_per_recipe', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('partner_id')
    )
    op.create_table('cost_markups',
    sa.Column('partner_id', sa.String(length=8), nullable=False),
    sa.Column('applied_from', sa.String(), nullable=False),
    sa.Column('applied_until', sa.String(), nullable=False),
    sa.Column('markup_percent', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.partner_id'], ),
    sa.PrimaryKeyConstraint('partner_id', 'applied_from', 'applied_until')
    )
    op.create_table('pantry_states',
    sa.Column('pantry_state_id', sa.UUID(), nullable=False),
    sa.Column('pantry_state_timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('partner_id', sa.String(length=8), nullable=False),
    sa.Column('items_available_from', sa.Date(), nullable=True),
    sa.Column('items_available_until', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.partner_id'], ),
    sa.PrimaryKeyConstraint('pantry_state_id')
    )
    op.create_table('pantry_items',
    sa.Column('pantry_item_id', sa.UUID(), nullable=False),
    sa.Column('pantry_state_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('units', sa.String(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('vendor_name', sa.String(), nullable=True),
    sa.Column('is_prepped_and_ready', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['pantry_state_id'], ['pantry_states.pantry_state_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pantry_item_id')
    )
    op.create_index(op.f('ix_pantry_items_pantry_state_id'), 'pantry_items', ['pantry_state_id'], unique=False)
    op.create_table('pantry_item_availabilities',
    sa.Column('pantry_item_id', sa.UUID(), nullable=False),
    sa.Column('applied_from', sa.String(), nullable=False),
    sa.Column('applied_until', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['pantry_item_id'], ['pantry_items.pantry_item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pantry_item_id', 'applied_from', 'applied_until')
    )
    op.create_table('pantry_item_costs',
    sa.Column('pantry_item_id', sa.UUID(), nullable=False),
    sa.Column('applied_from', sa.String(), nullable=False),
    sa.Column('applied_until', sa.String(), nullable=False),
    sa.Column('production_cost_us_dollars', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['pantry_item_id'], ['pantry_items.pantry_item_id'], ),
    sa.PrimaryKeyConstraint('pantry_item_id', 'applied_from', 'applied_until')
    )
    op.create_table('pantry_item_custom_fields',
    sa.Column('pantry_item_id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pantry_item_id'], ['pantry_items.pantry_item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pantry_item_id', 'key')
    )
    op.create_table('pantry_item_data_sources',
    sa.Column('pantry_item_id', sa.UUID(), nullable=False),
    sa.Column('culops_culinary_ingredient_id', sa.BigInteger(), nullable=False),
    sa.Column('culops_culinary_ingredient_specification_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['pantry_item_id'], ['pantry_items.pantry_item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pantry_item_id')
    )
    op.create_index(op.f('ix_pantry_item_data_sources_culops_culinary_ingredient_specification_id'), 'pantry_item_data_sources', ['culops_culinary_ingredient_specification_id'], unique=False)
    op.create_index(op.f('ix_pantry_item_data_sources_culops_culinary_ingredient_id'), 'pantry_item_data_sources', ['culops_culinary_ingredient_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pantry_item_data_sources_culops_culinary_ingredient_id'), table_name='pantry_item_data_sources')
    op.drop_index(op.f('ix_pantry_item_data_sources_culops_culinary_ingredient_specification_id'), table_name='pantry_item_data_sources')
    op.drop_table('pantry_item_data_sources')
    op.drop_table('pantry_item_custom_fields')
    op.drop_table('pantry_item_costs')
    op.drop_table('pantry_item_availabilities')
    op.drop_index(op.f('ix_pantry_items_pantry_state_id'), table_name='pantry_items')
    op.drop_table('pantry_items')
    op.drop_table('pantry_states')
    op.drop_table('cost_markups')
    op.drop_table('partners')
    # ### end Alembic commands ###
